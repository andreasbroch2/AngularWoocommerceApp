{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../services/authentication.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ionic-native/in-app-browser/ngx\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(fb, authService, alertController, router, loadingController, iab) {\n      this.fb = fb;\n      this.authService = authService;\n      this.alertController = alertController;\n      this.router = router;\n      this.loadingController = loadingController;\n      this.iab = iab;\n    }\n\n    ngOnInit() {\n      this.credentials = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n\n    login() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const loading = yield this.loadingController.create();\n        yield loading.present();\n        this.authService.login(this.credentials.value).subscribe(result => {\n          console.log('succes');\n          loading.dismiss();\n          this.router.navigateByUrl('/tabs', {\n            replaceUrl: true\n          });\n        }, error => __awaiter(this, void 0, void 0, function* () {\n          console.log('fail' + error);\n          yield loading.dismiss();\n          const alert = yield this.alertController.create({\n            header: 'Log ind mislykkedes',\n            message: error.message,\n            buttons: ['OK']\n          });\n          yield alert.present();\n        }));\n      });\n    } // Easy access for form fields\n\n\n    get email() {\n      return this.credentials.get('email');\n    }\n\n    get password() {\n      return this.credentials.get('password');\n    }\n\n    adgangskode() {\n      const browser = this.iab.create('https://hololifoods.dk/password/');\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i5.InAppBrowser));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[\"id\", \"row1\"], [\"src\", \"assets/images/logo.png\"], [\"id\", \"row2\"], [\"id\", \"row3\"], [\"id\", \"row4\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"submit\", \"expand\", \"block\", 3, \"disabled\"], [\"button\", \"\", 3, \"click\"], [\"id\", \"row5\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-content\");\n        i0.ɵɵelementStart(2, \"ion-grid\");\n        i0.ɵɵelementStart(3, \"ion-row\", 0);\n        i0.ɵɵelement(4, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"ion-row\", 2);\n        i0.ɵɵelementStart(6, \"ion-row\", 3);\n        i0.ɵɵelementStart(7, \"ion-text\");\n        i0.ɵɵtext(8, \"Log ind herunder med din email/brugernavn og adgangskode. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-row\", 4);\n        i0.ɵɵelementStart(10, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_10_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(11, \"ion-item\");\n        i0.ɵɵelement(12, \"ion-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-item\");\n        i0.ɵɵelement(14, \"ion-input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-button\", 8);\n        i0.ɵɵtext(16, \"Log ind\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-text\", 9);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_text_click_17_listener() {\n          return ctx.adgangskode();\n        });\n        i0.ɵɵtext(18, \"Glemt adgangskode?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"ion-row\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.credentials);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.credentials.valid);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonContent, i3.IonGrid, i3.IonRow, i3.IonText, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.IonItem, i3.IonInput, i3.TextValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.IonButton],\n    styles: [\"ion-item[_ngcontent-%COMP%]{border-radius:50px;height:55px;box-shadow:1px 8px 8px #00000014}ion-grid[_ngcontent-%COMP%]{height:100%}ion-row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}img[_ngcontent-%COMP%]{width:40%;height:auto}h1[_ngcontent-%COMP%]{text-align:center;font-style:bold}#row1[_ngcontent-%COMP%]{height:15%}#row2[_ngcontent-%COMP%]{height:20%}#row3[_ngcontent-%COMP%]{height:10%}#row4[_ngcontent-%COMP%]{height:40%}#row5[_ngcontent-%COMP%]{height:15%}ion-content[_ngcontent-%COMP%]{--ion-background-color: #fff}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}